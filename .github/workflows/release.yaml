name: Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get version from releases
      id: get_version
      run: |
        VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "::set-output name=VERSION::$VERSION"

    - name: Create Release Notes
      id: create_release_notes
      run: |
        CHANGELOG=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"* %s" | sed 's/^\* //')
        echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV
        echo "::set-output name=CHANGELOG::$CHANGELOG"

    - name: Create Release Body
      id: create_release_body
      run: |
        RELEASE_BODY="## Release v${{ steps.get_version.outputs.VERSION }}\n\n### Changelog:\n${{ steps.create_release_notes.outputs.CHANGELOG }}"
        echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV
        echo "::set-output name=RELEASE_BODY::$RELEASE_BODY"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false